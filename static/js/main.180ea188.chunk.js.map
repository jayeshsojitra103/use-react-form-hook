{"version":3,"sources":["../../src/index.js","App.js","utils/validators.js","index.js"],"names":["formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","App","initialInputs","initialFormValidity","_useReducer2","useReducer","formState","dispatch","useCallback","id","inputData","formValidity","useForm","name","email","address","inputHandler","setFormData","changeHandler","event","valid","target","validators","validator","trim","length","val","test","validate","touchHandler","isTouched","className","onSubmit","e","preventDefault","console","log","alert","JSON","stringify","onChange","onBlur","rows","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.180ea188.chunk.js","sourcesContent":["import { useCallback, useReducer } from 'react';\n\n\n//Handle Change event using reducer\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n\n  //Call reducers\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  //input control on change event\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  //Collection all form data\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React from 'react'\nimport { useForm } from 'use-react-form-hook';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL, validate } from './utils/validators';\nimport './index.css';\n\nconst App = () => {\n  //Pass all field details in hook\n  const [formState, inputHandler, setFormData] = useForm({\n    name: {\n      value: '',\n      isValid: false,\n    },\n    email: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n\n  }, false);\n\n  const changeHandler = (event, valid) => {\n    let { id, value } = event.target;\n    inputHandler(id, value, validate(value, valid))\n  };\n\n  const touchHandler = (id) => {\n    const { name, email, address } = formState.inputs;\n    setFormData(\n      {\n        ...formState.inputs,\n        [id]: {\n\n          ...formState.inputs[id],\n          isTouched: true\n        },\n      },\n      email?.isValid && address?.isValid && name?.isValid\n    );\n  }\n\n  const OnFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(formState.inputs);\n\n    alert(JSON.stringify(formState.inputs,null,4))\n  }\n\n\n  return (\n    <div className='form-box'>\n      <form onSubmit={OnFormSubmit}>\n        <div\n          className={`form-control ${!formState?.inputs?.name?.isValid && formState?.inputs?.name?.isTouched &&\n            'form-control--invalid'}`}\n        >\n\n          <input\n            id=\"name\"\n            type=\"text\"\n            onChange={(e) => { changeHandler(e, [VALIDATOR_REQUIRE()]) }}\n            onBlur={() => { touchHandler('name') }}\n          />\n          {!formState?.inputs?.name?.isValid && formState?.inputs?.name?.isTouched && <p>Please enter a name.</p>}\n        </div>\n\n        <div\n          className={`form-control ${!formState?.inputs?.email?.isValid && formState?.inputs?.email?.isTouched &&\n            'form-control--invalid'}`}\n        >\n\n          <input\n            id=\"email\"\n            type=\"email\"\n            onChange={(e) => { changeHandler(e, [VALIDATOR_EMAIL()]) }}\n            onBlur={() => { touchHandler('email') }} />\n\n          {!formState?.inputs?.email?.isValid && formState?.inputs?.email?.isTouched && <p>Please enter a valid email address</p>}\n        </div>\n\n        <div\n          className={`form-control ${!formState?.inputs?.address?.isValid && formState?.inputs?.address?.isTouched &&\n            'form-control--invalid'}`}\n        >\n          <textarea\n            id=\"address\"\n            onChange={(e) => { changeHandler(e, [VALIDATOR_MINLENGTH(5)]) }}\n            onBlur={() => { touchHandler('address') }}\n            rows=\"4\"\n          />\n          {!formState?.inputs?.address?.isValid && formState?.inputs?.address?.isTouched && <p>Please enter a valid address (at least 5 character).</p>}\n        </div>\n\n        <div className='center'>\n          <button disabled={!formState.isValid} type=\"submit\" className='button'>Submit</button>\n        </div>\n\n\n      </form >\n    </div >\n  )\n}\nexport default App","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}